const cors = require('cors');
const bodyParser = require('body-parser');
const express = require('express');
const path = require('path');
const fs = require('fs');


const app = express();
app.use(cors());
app.use(bodyParser.json());



app.listen(5000, () => console.log('Server started on port 5000'));


app.post('/api/names', (req, res) => {
  let elements = 'Максим,Фёдор,Артём,Дмитрий,Арсений,Данил,Макар,Эмир,Дамир,Егор,Юрий,Тихон,Александр,Алексей,Матвей,Владимир,Константин,Семён,Марк,Платон,Михаил,Григорий,Тимофей,Николай,Кирилл,Яромир,Ярослав,Лев,Антон,Андрей,Илья,Пётр,Степан,Святослав,Роман,Альберт,Данила,Иван,Даниил,Тимур,Никита,Павел,Богдан,Герман,Давид,Сергей,Руслан,Мирон,Владислав,Глеб,Василий,Филипп,Игорь,Всеволод,Гордей,Захар,Лука,Виктор,Артур,Вадим,Денис,Леонид,Савелий,Олег,Леон,Вячеслав,Валерий,Евгений,Анатолий,Георгий,Даниэль,Мирослав,Адам,Борис,Серафим,Эрик,Марсель,Савва,Артемий,Станислав,Демид,Яков,Родион,Елисей,Роберт,Али,Арсен,Назар,Ян,Ибрагим,Эмиль,Тигран,Билал,Ростислав,Рафаэль,Данис,Виталий,Демьян,Эмин,Камиль'.split(',');
  let result = [];
  elements.forEach(elem => {
    result.push({ sex: 'male', ru: `${elem}`, en: `${elem}EN` })
  });
  elements = 'Арина,Дарья,Варвара,Мария,Ясмина,Таисия,Василиса,Алиса,София,Ольга,Амина,Елизавета,Олеся,Мира,Анна,Виктория,Кира,Марианна,Софья,Валерия,Ксения,Маргарита,Ева,Есения,Анастасия,Кристина,Майя,Вероника,Полина,Татьяна,Ирина,Екатерина,Зоя,Александра,Марина,Аделина,Юлия,Ариана,Ульяна,Алия,Николь,Ника,Евдокия,Алёна,Сафия,Эмилия,Милана,Ангелина,Светлана,Аиша,Элина,Агния,Алина,Карина,Стефания,Моника,Наталья,Нина,Евгения,Ярослава,Серафима,Мирослава,Любовь,Каролина,Асия,Дарина,Марта,Оливия,Мия,Диана,Лидия,Елена,Мадина,Злата,Надежда,Вера,Камила,Марьям,Амелия,Людмила,Лейла,Пелагея,Евангелина,Мелания,Лилия,Эмма,Алеся,Анисия,Лада,Марьяна,Яна,Агата,Владислава,Фатима,Аврора,Малика,Валентина,Антонина,Лея,Тамара'.split(',');
  elements.forEach(elem => {
    result.push({ sex: 'female', ru: `${elem}`, en: `${elem}EN` })
  });
  fs.writeFile('data/names.json', JSON.stringify(result), function writeJSON(err) {
    if (err) {
      res.status(403)({ errorMessage: 'Error' });
    }
    res.status(200).send('OK');
  });
});

app.post('/api/surnames', (req, res) => {
  let elements = 'Комаров Николай,Васильев Александр,Новиков Андрей,Осипов Кирилл,Третьяков Артём,Савин Марк,Баранов Никита,Киреев Артём,Новиков Александр,Вишневский Никита,Некрасов Платон,Белов Сергей,Петров Василий,Еремин Иван,Колосов Александр,Чумаков Лев,Рогов Никита,Герасимов Павел,Александров Степан,Зайцев Илья,Марков Артур,Колесников Александр,Борисов Герман,Семенов Захар,Иванов Григорий,Костин Егор,Богданов Максим,Алексеев Денис,Афанасьев Тимур,Бирюков Вячеслав,Агафонов Марк,Васильев Ярослав,Наумов Давид,Рожков Глеб,Лосев Юрий,Кудряшов Матвей,Егоров Родион,Елисеев Лев,Васильев Лев,Зимин Тимофей,Нестеров Дмитрий,Евдокимов Михаил,Сергеев Николай,Яшин Иван,Филатов Ян,Никольский Павел,Яшин Павел,Андреев Давид,Максимов Давид,Голубев Тимофей,Ларионов Иван,Козловский Егор,Дроздов Мирон,Воробьев Михаил,Логинов Михаил,Голубев Леонид,Лыков Богдан,Литвинов Олег,Лукьянов Захар,Харитонов Кирилл,Коршунов Святослав,Марков Михаил,Фролов Иван,Успенский Фёдор,Наумов Мирослав,Никонов Арсений,Климов Александр,Федоров Артём,Бородин Владимир,Логинов Александр,Кузнецов Тихон,Петров Алексей,Егоров Савелий,Некрасов Ярослав,Белов Демид,Крылов Владислав,Титов Лев,Кондратов Артём,Митрофанов Константин,Козлов Владимир,Платонов Тимур,Большаков Савелий,Филимонов Михаил,Смирнов Леонид,Яковлев Марк,Филиппов Александр,Павлов Григорий,Гордеев Марк,Зотов Роман,Серебряков Александр,Ковалев Николай,Васильев Владимир,Чернов Тимофей,Степанов Андрей,Прокофьев Александр,Степанов Фёдор,Постников Матвей,Воробьев Алексей,Васильев Сергей,Казаков Артём'.split(',');
  let result = [];
  elements.forEach(elem => {
    result.push({ sex: 'male', ru: `${elem.split(' ')[0]}`, en: `${elem.split(' ')[0]}EN` })
  });
  elements = 'Александрова Яна,Русакова Алла,Иванова Нина,Волкова Мария,Козлова Алёна,Кудряшова Софья,Агеева Владислава,Ковалева Василиса,Беликова Василиса,Матвеева Ольга,Покровская Анастасия,Иванова Василиса,Новикова Виктория,Мартынова Александра,Молчанова Наталия,Прохорова Виктория,Михайлова Дарья,Соболева Василиса,Артемова Мария,Смирнова Мария,Беляева Есения,Терехова Николь,Мельникова Арина,Михайлова Мария,Петрова Полина,Попова Арина,Носкова Ольга,Романова Мирослава,Михайлова Мелания,Герасимова Полина,Белова Милана,Моисеева Ева,Ушакова Софья,Ершова Ясмина,Малинина Ксения,Яковлева Софья,Васильева Ирина,Семенова Ирина,Тихонова Варвара,Соколова Вероника,Маркина Софья,Соколова Ульяна,Егорова Виктория,Тарасова Дарья,Ананьева Александра,Алексеева Александра,Королева Ксения,Шестакова Кира,Васильева Милана,Казакова Виктория,Соколова Виктория,Малышева Анастасия,Еремина Евгения,Ефимова Вера,Кузина Алёна,Ежова Аделина,Артемова Варвара,Завьялова Мария,Леонова Варвара,Бабушкина Ульяна,Козлова Анна,Попова Татьяна,Короткова Ева,Елисеева Эмилия,Щербакова Мария,Зайцева Ирина,Серова Ксения,Семенова Эмилия,Еремина Арина,Круглова Ксения,Лаврентьева Василиса,Васильева Аврора,Козлова София,Евдокимова Арина,Сорокина Алиса,Иванова Мия,Котова Валерия,Смирнова София,Софронова Анастасия,Смирнова Александра,Попова Полина,Пономарева Ева,Зайцева Амина,Новикова Анна,Воронцова Нина,Захарова Амелия,Семенова Агния,Калинина Ангелина,Виноградова Полина,Калугина София,Богомолова Вероника,Костина Ирина,Григорьева Анна,Волкова Милана,Романова Ульяна,Соколова Алиса,Козлова Александра,Долгова Анастасия,Андреева София,Самойлова Зоя'.split(',');
  elements.forEach(elem => {
    result.push({ sex: 'female', ru: `${elem.split(' ')[0]}`, en: `${elem.split(' ')[0]}EN` })
  });
  fs.writeFile('data/surnames.json', JSON.stringify(result), function writeJSON(err) {
    if (err) {
      res.status(403)({ errorMessage: 'Error' });
    }
    res.status(200).send('OK');
  });
});

app.post('/api/phones', (req, res) => {
  let elements = `44(45)481-00-35 44(605)152-19-47 44(0726)039-59-20 44(3087)336-82-84 44(949)194-46-25 44(20)417-81-65 44(9948)337-27-60 44(6432)820-92-50 44(4250)595-42-88 44(1552)178-45-77 44(790)940-55-01 44(667)467-91-94 44(638)157-85-86 44(360)723-48-09 44(66)866-13-00 44(252)107-63-37 44(19)575-40-21 44(08)219-27-18 44(29)964-24-73 44(292)329-54-03 44(25)433-23-52 44(599)361-78-09 44(415)564-88-91 44(246)080-58-93 44(55)368-90-05 44(61)404-53-70 44(31)367-20-87 44(711)126-63-28 44(7833)042-45-18 44(90)787-50-82 44(09)416-29-55 44(86)112-39-42 44(60)358-28-93 44(7794)805-18-28 44(3122)432-41-60 44(88)258-95-29 44(255)730-15-34 44(77)289-39-82 44(0770)096-34-14 44(55)088-26-55 44(4523)424-20-55 44(41)938-29-35 44(13)898-73-39 44(7392)070-12-24 44(63)560-58-37 44(353)933-66-39 44(37)496-91-22 44(795)790-42-58 44(5121)610-98-34 44(0392)505-12-31 44(74)544-66-64 44(74)686-48-04 44(60)124-54-72 44(6720)978-25-35 44(22)021-19-13 44(47)848-71-69 44(09)924-37-65 44(26)371-51-29 44(8827)335-54-45 44(796)615-88-82 44(987)851-67-81 44(16)512-88-25 44(879)579-17-88 44(6302)843-91-15 44(34)695-57-42 44(12)803-87-78 44(9733)442-77-68 44(640)827-05-29 44(573)633-36-60 44(03)807-27-12 44(05)011-98-77 44(03)361-97-39 44(18)908-03-00 44(9100)878-08-15 44(87)601-71-99 44(08)482-37-44 44(5344)358-44-56 44(58)788-88-60 44(43)170-92-34 44(7736)729-88-77 44(554)247-67-48 44(588)256-98-22 44(514)829-48-39 44(86)615-16-30 44(651)348-99-94 44(86)256-15-48 44(19)351-30-79 44(33)126-07-98 44(219)243-06-50 44(856)632-97-56 44(7394)885-97-32 44(73)233-09-03 44(456)020-86-93 44(81)899-01-63 44(97)074-33-89 44(0020)901-98-34 44(3475)150-80-06 44(493)933-24-21 44(403)501-97-61 44(1172)376-30-03`.split(' ');
  let result = [];
  elements.forEach(elem => {
    result.push({ format: 'en', text: elem })
  });
  elements = `7(2110)235-99-99 7(6350)205-89-91 7(763)368-46-37 7(87)768-40-45 7(669)686-16-35 7(721)859-94-79 7(48)422-89-87 7(461)241-62-38 7(234)711-05-96 7(19)076-51-36 7(6192)308-64-29 7(40)009-01-89 7(66)895-65-76 7(1999)425-66-68 7(6878)612-39-02 7(782)733-63-90 7(573)608-47-61 7(747)502-29-45 7(882)838-30-15 7(2310)257-63-41 7(742)980-81-36 7(105)626-93-69 7(172)137-88-00 7(9161)256-31-09 7(697)923-64-88 7(6766)469-07-43 7(07)178-76-59 7(832)101-87-84 7(304)888-19-55 7(34)998-57-27 7(47)251-60-57 7(953)734-34-77 7(77)353-05-78 7(9305)538-59-23 7(6790)732-44-59 7(6544)384-92-93 7(52)890-59-10 7(4219)064-61-80 7(744)471-90-57 7(63)746-27-81 7(889)985-46-99 7(477)731-89-58 7(9507)222-02-70 7(25)152-52-09 7(40)457-15-21 7(54)746-45-77 7(49)748-74-82 7(760)757-97-23 7(08)547-25-12 7(86)619-85-65 7(132)291-62-25 7(89)050-27-99 7(5174)493-52-54 7(552)870-67-97 7(90)808-41-69 7(0916)607-26-90 7(701)988-98-87 7(7203)840-01-27 7(09)094-79-53 7(4183)528-82-20 7(61)738-04-79 7(632)855-37-36 7(9868)882-59-33 7(137)225-64-25 7(88)145-13-29 7(177)700-01-38 7(60)249-85-76 7(91)051-09-28 7(9579)934-00-47 7(96)538-83-97 7(494)121-18-80 7(749)444-84-19 7(5778)521-47-66 7(78)593-33-21 7(6660)602-48-11 7(438)951-64-02 7(35)565-22-22 7(83)315-45-97 7(070)342-57-51 7(189)026-10-94 7(098)960-03-02 7(4531)462-25-53 7(2581)320-18-97 7(9192)382-59-61 7(97)350-84-18 7(4892)718-80-07 7(999)611-69-99 7(979)675-56-83 7(912)204-10-40 7(6135)200-00-17 7(7245)848-14-02 7(2232)942-44-55 7(656)336-78-26 7(088)073-20-52 7(9544)997-56-08 7(6688)291-00-17 7(479)792-14-31 7(069)597-18-64 7(55)677-91-59 7(2914)566-52-66`.split(' ');
  elements.forEach(elem => {
    result.push({ format: 'ru', text: elem })
  });
  fs.writeFile('data/phones.json', JSON.stringify(result), function writeJSON(err) {
    if (err) {
      res.status(403)({ errorMessage: 'Error' });
    }
    res.status(200).send('OK');
  });
});


app.post('/api/countries', (req, res) => {

  let jsonData = JSON.parse(fs.readFileSync('data/countriesAndCities.json', 'utf8'));
  let result = [];
  for (var key in jsonData) {
    result.push({
      ru: `${key}RU`,
      en: `${key}`,
      citiesRu: jsonData[`${key}`].map((item) => item += 'RU'),
      citiesEn: jsonData[`${key}`]
    });
  }
  fs.writeFile('data/countries.json', JSON.stringify(result), function writeJSON(err) {
    if (err) {
      res.status(403)({ errorMessage: 'Error' });
    }
    res.status(200).send('OK');
  });
});


app.post('/api/streets', (req, res) => {
  let result = [];
  for (let i = 0; i < 300; i++) {
    result.push({ ru: `Street${i + 1}RU`, en: `Street${i + 1}EN` })
  }
  fs.writeFile('data/streets.json', JSON.stringify(result), function writeJSON(err) {
    if (err) {
      res.status(403)({ errorMessage: 'Error' });
    }
    res.status(200).send('OK');
  });
});


